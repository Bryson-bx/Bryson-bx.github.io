<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>物理卷(PV)、逻辑卷(LV)、卷组(VG)管理</title>
    <link href="/2025/08/20/lvm-management/"/>
    <url>/2025/08/20/lvm-management/</url>
    
    <content type="html"><![CDATA[<h1 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h1><p>逻辑卷是使用逻辑卷组管理(Logic Volume Manager)创建出来的设备，如果要了解逻辑卷，那么首先需要了解逻辑卷管理中的一些概念。</p><ul><li>物理卷（Physical Volume,PV）：也就是物理磁盘分区，如果想要使用LVM来管理整个分区，可以使用fdisk将其id改成LVM可以识别的值，即8e</li><li>卷组（volume group，VG）：pv的集合</li><li>逻辑卷（logic volume，LV）：VG中画出来的一块逻辑磁盘<br>物理磁盘或者磁盘分区转换为物理卷，一个或多个物理卷聚集形成一个或多个卷组，而逻辑卷就是从某个卷组里面抽象出来的一块磁盘空间。具体架构如下：<br><img src="lvpp.png"></li></ul><h1 id="为什么要使用逻辑卷"><a href="#为什么要使用逻辑卷" class="headerlink" title="为什么要使用逻辑卷"></a>为什么要使用逻辑卷</h1><p>虽然对于物理磁盘，我们直接分区、格式化为文件系统之后就可以使用，但是逻辑卷有更多的好处：</p><ul><li>如果需要大容量的磁盘，一般市场是无法满足需求的，但是逻辑卷可以将小磁盘合并为大逻辑磁盘</li><li>逻辑卷可以扩展和收缩磁盘，如果使用物理卷就无法完成</li></ul><h1 id="查看磁盘"><a href="#查看磁盘" class="headerlink" title="查看磁盘"></a>查看磁盘</h1><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ada">lsblk   <span class="hljs-comment">--列出所有可用的磁盘及其分区</span><br>fdisk -l /dev/sdX    <span class="hljs-comment">--查看指定磁盘的分区表</span><br>pvs      <span class="hljs-comment">--查看LVM物理卷</span><br>vgs      <span class="hljs-comment">--查看LVM物理卷的卷组</span><br>lvs       <span class="hljs-comment">--查看逻辑卷</span><br>df -h -T   <span class="hljs-comment">--查看文件系统的磁盘使用情况，包括挂载点、文件系统类型</span><br></code></pre></td></tr></table></figure><h1 id="创建分区"><a href="#创建分区" class="headerlink" title="创建分区"></a>创建分区</h1><p>通过上面的逻辑卷架构图，可以知道，如果要创建逻辑卷，需要先有物理磁盘或者磁盘分区，然后使用物理磁盘或磁盘分区创建物理卷，再使用物理卷创建卷组，最后使用卷组创建逻辑卷。</p><blockquote><p>使用<code>fdisk -l</code>命令查看现有硬盘信息、<br><img src="abc.png" alt="1"><br>可以看到有一个未分区的sdb盘<br> 输入<code>fdisk /dev/sdb</code> 进入分区工具，输入m进入菜单<br><img src="aaa.png"></p></blockquote><p>输入n进行分盘</p><ol><li><strong>选择分区类型</strong>，直接按回车选择默认的 p</li><li><strong>选择分区号</strong>，直接按回车选择默认的</li><li><strong>选择起始扇区</strong>，直接按回车使用默认值</li><li><strong>选择结束扇区</strong>  选择添加多少G比如说+5G，如果最后内存不够了可以直接点回车把剩余的全部添加</li><li>最后输入w保存</li></ol><p><img src="bbb.png"><br>可以看到已经分好盘了<br><img src="ccc.png"></p><h1 id="创建PV"><a href="#创建PV" class="headerlink" title="创建PV"></a>创建PV</h1><p>CentOS7以上系统，在创建卷组时会自动创建物理卷，可以省略此步骤</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">pvcreate <span class="hljs-regexp">/dev/</span>sdb1 <span class="hljs-regexp">/dev/</span>sdb2 <span class="hljs-regexp">/dev/</span>sdb3<br><span class="hljs-comment"># pvdisplay、pvsca、pvs用于查看物理卷</span><br><br>pvdisplay<br>pvs<br>pvscan<br></code></pre></td></tr></table></figure><p><img src="ddd.png"></p><h1 id="创建、扩容卷组"><a href="#创建、扩容卷组" class="headerlink" title="创建、扩容卷组"></a>创建、扩容卷组</h1><p>创建卷组相关命令有：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-function"><span class="hljs-title">vgcreate</span></span> VG_NAME device_1 ... device_n<br><br># 使用vgdosplay、vgscan、vgs命令查看卷组<br>vgdisplay<br>vgscan<br>vgs<br></code></pre></td></tr></table></figure><p><img src="fff.png"><br>扩容卷组的语法为</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-function"><span class="hljs-title">vgextend</span></span> VG_NAME device_1 ... device_n<br></code></pre></td></tr></table></figure><h1 id="创建、扩展逻辑卷"><a href="#创建、扩展逻辑卷" class="headerlink" title="创建、扩展逻辑卷"></a>创建、扩展逻辑卷</h1><p>有了卷组，就可以创建逻辑卷(LV)了，创建逻辑卷相关命令有：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 使用lvcreate创建逻辑卷</span><br><br><span class="hljs-attribute">lvcreate</span> –L SIZE –n LV_NAME VG_NAME<br><br>使用lvdisplay、lvscan、lvs查看逻辑卷<br>lvdisplay<br>lvscan<br>lvs<br></code></pre></td></tr></table></figure><p>如果要把卷组中所有的容量加入到逻辑卷中，使用如下命令：<br>&#96;lvcreate -l 100%FREE -n LV_NAME VG_NAME<br><img src="ggg.png"><br>扩展逻辑卷: 逻辑卷的空间来源于卷组，当卷组有足够的空间时，才可以扩展逻辑卷。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lvextend -L +5G /dev/vg1/lv1<br></code></pre></td></tr></table></figure><p>同样，如果将卷组中剩余的所有空间都扩展到逻辑卷中，使用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lvextend -l +100%FREE /dev/vg1/lv1<br></code></pre></td></tr></table></figure><h1 id="为逻辑卷创建文件系统-格式化逻辑卷"><a href="#为逻辑卷创建文件系统-格式化逻辑卷" class="headerlink" title="为逻辑卷创建文件系统&#x2F;格式化逻辑卷"></a>为逻辑卷创建文件系统&#x2F;格式化逻辑卷</h1><p><code>mkfs.xfs /dev/vg1/lv1</code><br><img src="hhh.png"><br>当你进行了逻辑卷扩展后，会发现文件系统的大小没有变，此时需要扩展文件系统<br><code>xfs_growfs /mnt/test</code></p><h1 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h1><h2 id="创建挂载点"><a href="#创建挂载点" class="headerlink" title="创建挂载点"></a>创建挂载点</h2><p>挂载点其实就是一个空目录，需要先创建它，用来作为访问这个新空间的“入口”。<br>创建一个名为 &#x2F;data 的目录作为挂载点（也可以取其他名字，比如 &#x2F;newdisk、&#x2F;home&#x2F;backup 等）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /data<br></code></pre></td></tr></table></figure><h2 id="挂载逻辑卷"><a href="#挂载逻辑卷" class="headerlink" title="挂载逻辑卷"></a>挂载逻辑卷</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mount /dev/vg1/lv1 /data<br></code></pre></td></tr></table></figure><h1 id="设置开机自动挂载"><a href="#设置开机自动挂载" class="headerlink" title="设置开机自动挂载"></a>设置开机自动挂载</h1><p>上面的 mount 命令只是<strong>临时挂载</strong>，当重启虚拟机后，这个挂载会失效，需要手动再挂载一次。了让它永久生效，必须将挂载信息写入到 &#x2F;etc&#x2F;fstab 文件中。</p><h3 id="获取逻辑卷的-UUID"><a href="#获取逻辑卷的-UUID" class="headerlink" title="获取逻辑卷的 UUID"></a>获取逻辑卷的 UUID</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">blkid /dev/vg1/lv1<br></code></pre></td></tr></table></figure><h3 id="编辑-etc-fstab-文件"><a href="#编辑-etc-fstab-文件" class="headerlink" title="编辑 &#x2F;etc&#x2F;fstab 文件"></a>编辑 &#x2F;etc&#x2F;fstab 文件</h3><p>首先备份一下这个文件<code>cp /etc/fstab /etc/fstab.bak</code><br>然后编辑文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml">vi /etc/fstab<br># 在文件的最后，添加新的一行，格式如下：  <br># <span class="hljs-tag">&lt;<span class="hljs-name">UUID</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">挂载点</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">文件系统类型</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">挂载选项</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">dump</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">fsck</span>&gt;</span><br>UUID=&quot;你的uuid &quot;  /data  xfs  defaults  0  0<br></code></pre></td></tr></table></figure><p>执行 mount -a 命令来测试您的 &#x2F;etc&#x2F;fstab 配置是否正确。如果没有任何报错，就说明配置无误。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
